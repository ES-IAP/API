name: Build
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    services:
      mysql_test:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306  # Expose different port for testing DB

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures complete history for better analysis

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Use your project's Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -P 3306 -u "${{ secrets.MYSQL_USER }}" --password="${{ secrets.MYSQL_PASSWORD }}" && break
            echo "MySQL not ready yet..."
            sleep 5
          done

      - name: Run Tests
        env:
          DB_USER: ${{ secrets.MYSQL_USER }}
          DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          DB_HOST: localhost
          DB_NAME: ${{ secrets.MYSQL_DATABASE }}
          DB_PORT: 3306
          DATABASE_URL: "mysql+pymysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@127.0.0.1:3306/${{ secrets.MYSQL_DATABASE }}"
          ENV: test
          AWS_REGION: ${{ secrets.AWS_REGION }}
          COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
          COGNITO_USER_CLIENT_ID: ${{ secrets.COGNITO_USER_CLIENT_ID }}
          COGNITO_USER_CLIENT_SECRET: ${{ secrets.COGNITO_USER_CLIENT_SECRET }}
          COGNITO_TOKEN_ENDPOINT: ${{ secrets.COGNITO_TOKEN_ENDPOINT }}
          PYTHONPATH: ${{ github.workspace }} 
        run: |
            pytest -vv --cov=./ --cov-report=xml  # Runs tests and generates coverage report in XML

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
            args: -Dsonar.projectBaseDir=./
